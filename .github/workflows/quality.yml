name: Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Set up pre-commit cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Run pre-commit
      run: |
        pre-commit run --all-files --show-diff-on-failure

    - name: Run ansible-lint
      uses: ansible/ansible-lint@v6
      with:
        path: ./

    - name: Run enhanced linting
      run: |
        make lint

    - name: Run security scan
      run: |
        make security

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: quality-reports-${{ matrix.python-version }}
        path: |
          security-report.json
          bandit-report.json

  molecule:
    runs-on: ubuntu-latest
    needs: quality
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run Molecule tests
      run: |
        cd tests/molecule/tailscale
        molecule test

    - name: Upload Molecule test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: molecule-results
        path: |
          tests/molecule/tailscale/.molecule/
