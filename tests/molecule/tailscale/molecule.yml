---
dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml
driver:
  name: delegated
  options:
    managed: false
    ansible_connection_options:
      ansible_connection: local
platforms:
  - name: macos-test
    groups:
      - macos
    # macOS DevContainer specific configuration
    environment:
      PATH: "/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin"
      ANSIBLE_HOST_KEY_CHECKING: "False"
provisioner:
  name: ansible
  config_options:
    defaults:
      callbacks_enabled: profile_tasks
      timeout: 120
      fact_caching: memory
      gathering: smart
      host_key_checking: false
      retry_files_enabled: false
    ssh_connection:
      pipelining: false
      ssh_args: -o ControlMaster=auto -o ControlPersist=60s
  inventory:
    hosts:
      macos-test:
        ansible_connection: local
        ansible_become: true
        ansible_python_interpreter: /usr/bin/python3
        # DevContainer specific variables
        devcontainer_enabled: true
        docker_available: true
verifier:
  name: ansible
  lint: |
    set -e
    yamllint .
    ansible-lint --offline
scenario:
  name: tailscale
  test_sequence:
    - dependency
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy