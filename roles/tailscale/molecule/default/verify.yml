- name: Verify
  hosts: all
  become: yes
  gather_facts: yes
  collections:
  - kaitranntt.mac

  tasks:
  - name: Check if Tailscale CLI is installed
    ansible.builtin.stat:
      path: /usr/local/bin/tailscale
    register: tailscale_cli
    failed_when: not tailscale_cli.stat.exists

  - name: Check if Tailscaled is installed
    ansible.builtin.stat:
      path: /usr/local/bin/tailscaled
    register: tailscaled_cli
    failed_when: not tailscaled_cli.stat.exists

  - name: Check Tailscale version
    ansible.builtin.command: /usr/local/bin/tailscale version
    register: tailscale_version
    changed_when: false
    failed_when: false

  - name: Display Tailscale version
    ansible.builtin.debug:
      var: tailscale_version.stdout_lines

  - name: Check if LaunchDaemon is loaded (macOS)
    ansible.builtin.command: launchctl list | grep com.tailscale.tailscaled
    register: tailscale_service_macos
    changed_when: false
    failed_when: false
    when: ansible_os_family == "Darwin"

  - name: Check if systemd service is running (Linux)
    ansible.builtin.systemd:
      name: tailscaled
    register: tailscale_service_linux
    failed_when: false
    when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"

  - name: Verify service is running (macOS)
    ansible.builtin.assert:
      that:
      - tailscale_service_macos.rc == 0
      fail_msg: Tailscale service is not running on macOS
      success_msg: Tailscale service is running on macOS
    when: ansible_os_family == "Darwin"

  - name: Verify service is running (Linux)
    ansible.builtin.assert:
      that:
      - tailscale_service_linux.status is defined and
        tailscale_service_linux.status.ActiveState == "active"
      fail_msg: Tailscale service is not running on Linux
      success_msg: Tailscale service is running on Linux
    when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"

  - name: Check Tailscale socket
    ansible.builtin.stat:
      path: /var/run/tailscale/tailscaled.sock
    register: tailscale_socket
    failed_when: not tailscale_socket.stat.exists

  - name: Check Tailscale status
    ansible.builtin.command: /usr/local/bin/tailscale status
    register: tailscale_status
    changed_when: false
    failed_when: false

  - name: Display Tailscale status
    ansible.builtin.debug:
      var: tailscale_status.stdout_lines

  - name: Verify Tailscale is functional
    ansible.builtin.assert:
      that:
      - tailscale_status.rc == 0
      fail_msg: Tailscale is not responding to status command
      success_msg: Tailscale is responding correctly
